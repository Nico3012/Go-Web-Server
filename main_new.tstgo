package main

import (
	"crypto/tls"
	"log"
	"net"
	"net/http"
)

func main() {
	// Load the certificate and key files
	cert, err := tls.LoadX509KeyPair("tls/cert/live/cert.pem", "tls/cert/live/key.pem")
	if err != nil {
		log.Fatalf("failed to load key pair: %s", err)
	}

	// Create a TLS config
	tlsConfig := &tls.Config{
		Certificates: []tls.Certificate{cert},
	}

	// Create a TCP listener
	listener, err := net.Listen("tcp", ":443")
	if err != nil {
		log.Fatalf("failed to create listener: %s", err)
	}

	// Wrap the TCP listener with TLS
	tlsListener := tls.NewListener(listener, tlsConfig)

	// Define a simple handler
	http.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		w.Write([]byte("Hello, TLS!"))
	})

	// Start the server
	err = http.Serve(tlsListener, nil)
	log.Fatalf("failed to serve: %s", err)
}
